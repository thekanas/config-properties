spring:
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER}
    consumer:
      group-id: order-event-consumer-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: ru.innotech.orderapi.core.model
        spring.json.use.type.headers: false
        spring.json.value.default.type: ru.innotech.orderapi.core.model.Event
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

topics:
  orders:
    input: orders.input
    events: orders.events

eureka:
  client:
    enabled: false

management:
  endpoints:
    web:
      exposure:
        include: refresh, beans, health, prometheus, gateway
  metrics:
    export:
      prometheus:
        enabled: true
